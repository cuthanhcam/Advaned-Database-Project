-- Tạo database
CREATE DATABASE QLCSV;
USE QLCSV;

-- Tạo bảng Khoa
CREATE TABLE Khoa (
    MaKhoa VARCHAR(10) PRIMARY KEY,
    TenKhoa NVARCHAR(100) NOT NULL,
    TruongKhoa NVARCHAR(100),
    EmailKhoa VARCHAR(100) UNIQUE,
    SoDienThoaiKhoa VARCHAR(20)
);

-- Tạo bảng Lop
CREATE TABLE Lop (
    MaLop VARCHAR(10) PRIMARY KEY,
    TenLop NVARCHAR(100) NOT NULL,
    MaKhoa VARCHAR(10) NOT NULL,
    NienKhoa VARCHAR(20),
    CONSTRAINT FK_Lop_Khoa FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa) ON DELETE CASCADE
);

-- Tạo bảng SinhVien
CREATE TABLE SinhVien (
    MaSinhVien VARCHAR(10) PRIMARY KEY,
    HoTen NVARCHAR(100) NOT NULL,
    NgaySinh DATE NOT NULL,
    GioiTinh NVARCHAR(10) CHECK (GioiTinh IN (N'Nam', N'Nữ', N'Khác')),
    Email VARCHAR(100) UNIQUE NOT NULL,
    SoDienThoai VARCHAR(20),
    DiaChi NVARCHAR(200),
    MaLop VARCHAR(10) NOT NULL,
    TrangThai NVARCHAR(50) DEFAULT N'Đang học' CHECK (TrangThai IN (N'Đang học', N'Đã tốt nghiệp')),
    CONSTRAINT FK_SinhVien_Lop FOREIGN KEY (MaLop) REFERENCES Lop(MaLop) ON DELETE CASCADE,
    CONSTRAINT CK_Tuoi_SinhVien CHECK (DATEDIFF(YEAR, NgaySinh, GETDATE()) BETWEEN 18 AND 60)
);

-- Tạo bảng CuuSinhVien
CREATE TABLE CuuSinhVien (
    MaSinhVien VARCHAR(10) PRIMARY KEY,
    NgayTotNghiep DATE NOT NULL,
    CongViecHienTai NVARCHAR(100),
    CongTy NVARCHAR(100),
    ViTri NVARCHAR(100),
    EmailCongTy VARCHAR(100),
    SoDienThoaiCongTy VARCHAR(20),
    CONSTRAINT FK_CuuSinhVien_SinhVien FOREIGN KEY (MaSinhVien) REFERENCES SinhVien(MaSinhVien)
);

-- Trigger cập nhật trạng thái tốt nghiệp
CREATE TRIGGER trg_Update_TrangThai
ON CuuSinhVien
AFTER INSERT
AS
BEGIN
    UPDATE SinhVien
    SET TrangThai = N'Đã tốt nghiệp'
    WHERE MaSinhVien IN (SELECT MaSinhVien FROM inserted);
END;

-- Tạo bảng MonHoc
CREATE TABLE MonHoc (
    MaMonHoc VARCHAR(10) PRIMARY KEY,
    TenMonHoc NVARCHAR(100) NOT NULL,
    MaKhoa VARCHAR(10) NOT NULL,
    CONSTRAINT FK_MonHoc_Khoa FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa)
);

-- Tạo bảng Diem
CREATE TABLE Diem (
    MaDiem INT IDENTITY(1,1) PRIMARY KEY,
    MaSinhVien VARCHAR(10) NOT NULL,
    MaMonHoc VARCHAR(10) NOT NULL,
    DiemSo DECIMAL(4,2) CHECK (DiemSo BETWEEN 0 AND 10),
    HocKy VARCHAR(20),
    NamHoc VARCHAR(20),
    LanThi INT DEFAULT 1,
    CONSTRAINT FK_Diem_SinhVien FOREIGN KEY (MaSinhVien) REFERENCES SinhVien(MaSinhVien),
    CONSTRAINT FK_Diem_MonHoc FOREIGN KEY (MaMonHoc) REFERENCES MonHoc(MaMonHoc),
    CONSTRAINT UQ_Diem UNIQUE (MaSinhVien, MaMonHoc, HocKy, NamHoc, LanThi)
);

-- Tạo bảng SuKien
CREATE TABLE SuKien (
    MaSuKien INT IDENTITY(1,1) PRIMARY KEY,
    TenSuKien NVARCHAR(200) NOT NULL,
    NgayToChuc DATETIME NOT NULL CHECK (NgayToChuc >= GETDATE()),
    DiaDiem NVARCHAR(200),
    MoTa NVARCHAR(MAX)
);

-- Tạo bảng ThamGiaSuKien
CREATE TABLE ThamGiaSuKien (
    MaThamGia INT IDENTITY(1,1) PRIMARY KEY,
    MaSuKien INT NOT NULL,
    MaSinhVien VARCHAR(10) NOT NULL,
    ThoiGianDangKy DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK_ThamGiaSuKien_SuKien FOREIGN KEY (MaSuKien) REFERENCES SuKien(MaSuKien),
    CONSTRAINT FK_ThamGiaSuKien_SinhVien FOREIGN KEY (MaSinhVien) REFERENCES SinhVien(MaSinhVien),
    CONSTRAINT UQ_ThamGia UNIQUE (MaSuKien, MaSinhVien)
);

-- Tạo bảng TinTuc
CREATE TABLE TinTuc (
    MaTinTuc INT IDENTITY(1,1) PRIMARY KEY,
    TieuDe NVARCHAR(200) NOT NULL,
    NoiDung NVARCHAR(MAX) NOT NULL,
    NgayDang DATETIME DEFAULT GETDATE(),
    TacGia NVARCHAR(100),
    MaKhoa VARCHAR(10),
    CONSTRAINT FK_TinTuc_Khoa FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa)
);

-- Tạo bảng TaiKhoan
CREATE TABLE TaiKhoan (
    MaTaiKhoan INT IDENTITY(1,1) PRIMARY KEY,
    TenDangNhap VARCHAR(100) UNIQUE NOT NULL,
    MatKhau VARCHAR(255) NOT NULL,
    LoaiTaiKhoan VARCHAR(20) NOT NULL CHECK (LoaiTaiKhoan IN ('Admin', 'SinhVien', 'CuuSinhVien')),
    MaSinhVien VARCHAR(10) UNIQUE,
    CONSTRAINT FK_TaiKhoan_SinhVien FOREIGN KEY (MaSinhVien) REFERENCES SinhVien(MaSinhVien)
);
