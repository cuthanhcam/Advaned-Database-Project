CREATE TABLE Khoa (
    MaKhoa INT IDENTITY(1,1) PRIMARY KEY,
    TenKhoa NVARCHAR(100) NOT NULL UNIQUE,
    Email NVARCHAR(100) NOT NULL UNIQUE CHECK (Email LIKE '%@%.%'),
    SoDienThoai NVARCHAR(15) NULL CHECK (SoDienThoai LIKE '[0-9]%')
);

Ràng buộc:
MaKhoa: Khóa chính, tự tăng.
TenKhoa: Không null, duy nhất (tránh trùng tên khoa).
Email: Không null, duy nhất, phải có định dạng email cơ bản.
SoDienThoai: Có thể null, nếu có thì phải bắt đầu bằng số.

CREATE TABLE NguoiDung (
    MaNguoiDung INT IDENTITY(1,1) PRIMARY KEY,
    Email NVARCHAR(100) NOT NULL UNIQUE CHECK (Email LIKE '%@%.%'),
    MatKhau NVARCHAR(255) NOT NULL,
    VaiTro NVARCHAR(20) NOT NULL CHECK (VaiTro IN ('Admin', 'Khoa', 'CuuSinhVien')),
    MaKhoa INT NULL,
    TrangThai BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa)
);

Ràng buộc:
MaNguoiDung: Khóa chính, tự tăng.
Email: Không null, duy nhất, định dạng email.
MatKhau: Không null (sẽ được mã hóa bởi Identity Core).
VaiTro: Không null, chỉ nhận giá trị "Admin", "Khoa", "CuuSinhVien".
MaKhoa: Khóa ngoại liên kết với Khoa, có thể null (Admin không cần khoa).
TrangThai: Không null, mặc định là 1 (hoạt động).

CREATE TABLE SinhVien (
    MSSV NVARCHAR(20) PRIMARY KEY,
    HoTen NVARCHAR(100) NOT NULL,
    GioiTinh BIT NOT NULL CHECK (GioiTinh IN (0, 1)),
    NgaySinh DATE NOT NULL CHECK (NgaySinh <= GETDATE()),
    QueQuan NVARCHAR(200) NULL,
    NganhHoc NVARCHAR(100) NOT NULL,
    MaKhoa INT NOT NULL,
    Email NVARCHAR(100) NULL UNIQUE CHECK (Email LIKE '%@%.%'),
    SoDienThoai NVARCHAR(15) NULL CHECK (SoDienThoai LIKE '[0-9]%'),
    FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa)
);

Ràng buộc:
MSSV: Khóa chính, không null.
HoTen, NganhHoc: Không null.
GioiTinh: Không null, chỉ nhận 0 (Nữ) hoặc 1 (Nam).
NgaySinh: Không null, phải nhỏ hơn hoặc bằng ngày hiện tại.
MaKhoa: Khóa ngoại, không null, liên kết với Khoa.
Email: Có thể null, nếu có thì duy nhất và đúng định dạng.
SoDienThoai: Có thể null, nếu có thì bắt đầu bằng số.

CREATE TABLE CuuSinhVien (
    MSSV NVARCHAR(20) PRIMARY KEY,
    NamTotNghiep INT NOT NULL CHECK (NamTotNghiep BETWEEN 1900 AND YEAR(GETDATE())),
    XepLoaiTotNghiep NVARCHAR(50) NOT NULL CHECK (XepLoaiTotNghiep IN ('Xuất sắc', 'Giỏi', 'Khá', 'Trung bình')),
    DiaChiHienTai NVARCHAR(200) NULL,
    HinhThucLienLac NVARCHAR(20) NOT NULL CHECK (HinhThucLienLac IN ('Email', 'Phone')),
    FOREIGN KEY (MSSV) REFERENCES SinhVien(MSSV)
);

Ràng buộc:
MSSV: Khóa chính, khóa ngoại liên kết với SinhVien.
NamTotNghiep: Không null, phải nằm trong khoảng hợp lý (1900 đến năm hiện tại).
XepLoaiTotNghiep: Không null, chỉ nhận các giá trị hợp lệ.
HinhThucLienLac: Không null, chỉ nhận "Email" hoặc "Phone".

CREATE TABLE CongViec (
    MaCongViec INT IDENTITY(1,1) PRIMARY KEY,
    MSSV NVARCHAR(20) NOT NULL,
    ViTri NVARCHAR(100) NULL,
    CongTy NVARCHAR(100) NULL,
    LinhVuc NVARCHAR(100) NULL,
    ThuNhap DECIMAL(18,2) NULL CHECK (ThuNhap >= 0),
    FOREIGN KEY (MSSV) REFERENCES CuuSinhVien(MSSV)
);

Ràng buộc:
MaCongViec: Khóa chính, tự tăng.
MSSV: Khóa ngoại, không null, liên kết với CuuSinhVien.
ThuNhap: Có thể null, nếu có thì phải >= 0.

CREATE TABLE ThanhTuu (
    MaThanhTuu INT IDENTITY(1,1) PRIMARY KEY,
    MSSV NVARCHAR(20) NOT NULL,
    TenThanhTuu NVARCHAR(100) NOT NULL,
    MoTa NVARCHAR(500) NULL,
    NamDatDuoc INT NOT NULL CHECK (NamDatDuoc BETWEEN 1900 AND YEAR(GETDATE())),
    FOREIGN KEY (MSSV) REFERENCES CuuSinhVien(MSSV)
);

Ràng buộc:
MaThanhTuu: Khóa chính, tự tăng.
MSSV: Khóa ngoại, không null, liên kết với CuuSinhVien.
TenThanhTuu: Không null.
NamDatDuoc: Không null, trong khoảng hợp lý.

CREATE TABLE SuKien (
    MaSuKien INT IDENTITY(1,1) PRIMARY KEY,
    TenSuKien NVARCHAR(100) NOT NULL,
    NgayToChuc DATETIME NOT NULL CHECK (NgayToChuc >= GETDATE()),
    DiaDiem NVARCHAR(200) NOT NULL,
    MaKhoa INT NOT NULL,
    FOREIGN KEY (MaKhoa) REFERENCES Khoa(MaKhoa)
);

Ràng buộc:
MaSuKien: Khóa chính, tự tăng.
TenSuKien, DiaDiem: Không null.
NgayToChuc: Không null, phải từ ngày hiện tại trở đi.
MaKhoa: Khóa ngoại, không null, liên kết với Khoa.

CREATE TABLE DangKySuKien (
    MaDangKy INT IDENTITY(1,1) PRIMARY KEY,
    MSSV NVARCHAR(20) NOT NULL,
    MaSuKien INT NOT NULL,
    NgayDangKy DATETIME NOT NULL DEFAULT GETDATE() CHECK (NgayDangKy <= GETDATE()),
    CONSTRAINT UK_DangKySuKien UNIQUE (MSSV, MaSuKien),
    FOREIGN KEY (MSSV) REFERENCES CuuSinhVien(MSSV),
    FOREIGN KEY (MaSuKien) REFERENCES SuKien(MaSuKien)
);

Ràng buộc:
MaDangKy: Khóa chính, tự tăng.
MSSV, MaSuKien: Khóa ngoại, không null, liên kết với CuuSinhVien và SuKien.
NgayDangKy: Không null, mặc định là ngày hiện tại, không được lớn hơn ngày hiện tại.
UNIQUE (MSSV, MaSuKien): Đảm bảo một cựu sinh viên chỉ đăng ký một sự kiện một lần.

CREATE TABLE ThongBao (
    MaThongBao INT IDENTITY(1,1) PRIMARY KEY,
    MSSV NVARCHAR(20) NOT NULL,
    NoiDung NVARCHAR(500) NOT NULL,
    NgayGui DATETIME NOT NULL DEFAULT GETDATE() CHECK (NgayGui <= GETDATE()),
    TrangThai BIT NOT NULL DEFAULT 0,
    FOREIGN KEY (MSSV) REFERENCES CuuSinhVien(MSSV)
);

Ràng buộc:
MaThongBao: Khóa chính, tự tăng.
MSSV: Khóa ngoại, không null, liên kết với CuuSinhVien.
NoiDung: Không null.
NgayGui: Không null, mặc định ngày hiện tại, không lớn hơn ngày hiện tại.
TrangThai: Không null, mặc định 0 (chưa đọc).

Các mối quan hệ và chuẩn hóa
Quan hệ:
NguoiDung -> Khoa (1-N, qua MaKhoa)
SinhVien -> Khoa (N-1, qua MaKhoa)
CuuSinhVien -> SinhVien (1-1, qua MSSV)
CongViec -> CuuSinhVien (N-1, qua MSSV)
ThanhTuu -> CuuSinhVien (N-1, qua MSSV)
SuKien -> Khoa (N-1, qua MaKhoa)
DangKySuKien -> CuuSinhVien (N-1, qua MSSV)
DangKySuKien -> SuKien (N-1, qua MaSuKien)
ThongBao -> CuuSinhVien (N-1, qua MSSV)

Chuẩn hóa: Các bảng đều đạt BCNF vì mỗi bảng có khóa chính xác định đầy đủ các thuộc tính không khóa, không có phụ thuộc hàm dư thừa.